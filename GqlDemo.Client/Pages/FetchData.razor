@page "/fetchdata"
@inject ISharesClient SharesClient

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (shares == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>CompanyName</th>
                <th>Industry</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var share in shares)
            {
                <ShareViewer Share="share" OnClick="this.ChangeValueAsync" />
            }
        </tbody>
    </table>
}

@code {
    private List<IShare> shares;

    protected override async Task OnInitializedAsync()
    {
        var query = await this.SharesClient.GetShares.ExecuteAsync(first: null, last: null, industryId:null);

        shares = query.Data.Shares.Nodes.Cast<IShare>().ToList();
    }

    private Random random = new Random();

    private async Task ChangeValueAsync(IShare share)
    {
        var command = await this.SharesClient.ChangeValue.ExecuteAsync(share.Id, random.Next(-20, +20));

        var index = shares.IndexOf(share);

        shares[index] = (IShare)command.Data.ChangeValue.Share;
    }
}
